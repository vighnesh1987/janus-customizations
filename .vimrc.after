
" Making it so ; works like : for commands. Saves typing and eliminates :W style typos due to lazy holding shift.
" nnoremap ; :
" UNDID this because ; is used to repeat f/t/F/T searches

" Stupid shift key fixes
cmap W w
cmap WQ wq
cmap wQ wq
cmap Q q

" Some utility leader key combos
:map <leader>v :vsplit<cr>
":map <leader>t :TlistToggle<cr>
":map <Leader>r :TlistUpdate<CR>
":map <Leader>nn :set nonu<CR>
":map <Leader>n  :set nu<CR>
:map gr :tabp<CR>
" Search and replace using current word
:map <Leader>rr "hy:%s/<C-r>h//gc<left><left><left>

" Narrow region for focussed editing
:map <Leader>nrg :NarrowRegion<CR>

" visual shifting (does not exit Visual mode)
vnoremap < <gv
vnoremap > >gv

" Replace <C-w> with ', required for switching between vim panes
:map ' <C-w>

" === Highlight: Toggle hlsearch ===
:map <Leader>hh <Leader>hs<CR>
" ==== Highlight current line and column===
:hi CursorLine   cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white
:hi CursorColumn cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white
:nnoremap <Leader>hc :set cursorline! cursorcolumn!<CR>

" ==== Add current directory to statusline ===
set statusline+=\ [%{CurDir()}]          " current dir
function! CurDir()
    let curdir = substitute(getcwd(), '/Users/Rege/Dropbox/Courses/Spr12/CS142/Sites', "sites", "g")
    let curdir = substitute(curdir, '/Users/Rege/Dropbox/Courses/Sum12', "sum12", "g")
    let curdir = substitute(curdir, '/Users/Rege/Dropbox', "dropbox", "g")
    let curdir = substitute(curdir, '/Users/Rege', "~", "g")
    return curdir
endfunction

"Fix for NERDTree
" NOT NEEDED with MacVim
"http://stackoverflow.com/questions/8753286/nerd-tree-enter-does-not-open-sub-dirs?lq=1
"let g:NERDTreeDirArrows=0

" Color scheme
:color default
":color smyck
":color Tomorrow-Night-Eighties
":color railscasts2

" Open and close NERDTree automatically
"autocmd vimenter * NERDTree
"autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" color syntax for ejs files
au BufNewFile,BufRead *.ejs set filetype=html

" LeanData style
set tabstop=2
set softtabstop=2
set shiftwidth=2
set noexpandtab

" indentLevel
let g:indentLine_color_term='235'
let g:indentLine_char='│'
let g:indentLine_showFirstIndentLevel=1
hi SpecialKey ctermfg=235
set list lcs=tab:\│\ 

